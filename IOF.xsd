<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  

  ###############################################################################
  ##  INTERNATIONAL ORIENTEERING FEDERATION DATA EXCHANGE FORMAT, VERSION 3.0  ##
  ###############################################################################

  ###############################################################################
  ##                                  DRAFT                                    ##
  ###############################################################################

-->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" xml:lang="en">
  <xsd:annotation>
    <xsd:documentation>
      This schema describes the IOF data exchange format for a wide selection of
      orienteering information. The schema supersedes the previous version 2.0.3.

      Authors:
      Mats Troeng, SWE

      Date:
      04-2011
    </xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>



  <!-- GLOBAL ELEMENTS -->

  <xsd:element name="PersonList">
    <xsd:annotation>
      <xsd:documentation>
        List of persons. This should not be used to exchange competitors; use CompetitorList instead.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Person" type="Person" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="CompetitorList">
    <xsd:annotation>
      <xsd:documentation>
        A list of competitors. This is used to exchange a "brutto" list of possible competitors. This should not be used to exchange entries; use EntryList instead.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Competitor" type="Competitor" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="OrganisationList">
    <xsd:annotation>
      <xsd:documentation>
        A list of organisations, including address and contact information.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Organisation" type="Organisation" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="ScoreList">
    <xsd:annotation>
      <xsd:documentation>
        A list of competitors in a specific score or ranking list.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Name" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>
              The name identifying the score or ranking list, e.g. 'World Ranking List'.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="PersonScore" type="PersonScore" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="EventList">
    <xsd:annotation>
      <xsd:documentation>
        A list of events. This can be used to exchange fixtures.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Event" type="Event" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="ClassList">
    <xsd:annotation>
      <xsd:documentation>
        A list of classes, not connected to any particular event.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Class" type="Class" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="CourseData">
    <xsd:annotation>
      <xsd:documentation>
        This element defines all the control and course information for an event or event race.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Event" type="Event" minOccurs="0"/>
        <xsd:element name="EventRace" type="EventRace" minOccurs="0"/>
        <xsd:element name="Map" type="Map" minOccurs="0"/>
        <xsd:element name="Control" type="Control" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element name="CourseClassData" type="CourseClassData" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>
              The assignment of a course to classes.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="TeamCourseCombination" type="TeamCourseCombination" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>
              The assignment of courses to relay teams.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
    </xsd:complexType>
  </xsd:element>


  <!-- TODO: skip the type attribute, and introduce a new element SecondaryId what covers for e.g. World Ranking List needs? -->
  <xsd:complexType name="Id" mixed="false">
    <xsd:annotation>
      <xsd:documentation>
        Identifier element, used extensively. If an entity is known by both systems taking part in the data exchange, it is preferable to let the entity contain only the Id element in order to avoid information redundancy.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="type" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The issuer of the identity, e.g. World Ranking List.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="Person">
    <xsd:annotation>
      <xsd:documentation>
        Represents a person. This could either be a competitor (see the Competitor element) or contact persons in an organisation (see the Organisation element) or press (see the "Office" element).
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <!-- TODO: allow multiple ids? -->
      <xsd:element name="Id" type="Id" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Name" type="PersonName" minOccurs="0"/>
      <xsd:element name="BirthDate" type="xsd:date" minOccurs="0"/>
      <xsd:element name="Address" type="Address" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Contact" type="Contact" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Nationality" type="Country" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="sex" use="optional">
      <xsd:simpleType>
        <xsd:restriction base="xsd:NMTOKEN">
          <xsd:enumeration value="F"/>
          <xsd:enumeration value="M"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="PersonName">
    <xsd:sequence>
      <xsd:element name="Family" type="xsd:string"/>
      <xsd:element name="Given" type="xsd:string" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="Competitor">
    <xsd:annotation>
      <xsd:documentation>
        Represents information about a person in a competition context, i.e. including organisation and control card.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Person" type="Person"/>
      <xsd:element name="Organisation" type="Organisation" minOccurs="0" maxOccurs="unbounded"/>
      <!-- TODO: is this information really necessary? -->
      <xsd:element name="DefaultClass" type="Class" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            The classes that the competitor prefer to take part in. Used to automatically pre-select a class when the person is about to submit an entry.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ControlCard" type="ControlCard" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Score" type="Score" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="ControlCard">
    <xsd:sequence>
      <xsd:element name="Id" type="Id">
        <xsd:annotation>
          <xsd:documentation>
            The unique identifier of the control card, i.e. 'card number'.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="PunchingSystem" type="PunchingSystem">
        <xsd:annotation>
          <xsd:documentation>
            The manufacturer of the punching system, e.g. 'SI' or 'Emit'.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="PersonScore">
    <xsd:sequence>
      <xsd:element name="Person" type="Person"/>
      <xsd:element name="Score" type="Score"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="Score">
    <xsd:annotation>
      <xsd:documentation>
        The score earned in an event for some purpose, e.g. a ranking list. The 'type' attribute is used to specify which purpose.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:double">
        <xsd:attribute name="type" use="required" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="Organisation">
    <xsd:annotation>
      <xsd:documentation>
        Information about an organisation, i.e. address, contact person(s) etc. An organisation is a general term including federations, clubs, etc.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Id" type="Id" minOccurs="0"/>
      <xsd:element name="Name" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The full name of the organisation.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortName" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The short (abbreviated) name of the organisation.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="PressName" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The name of the organisation as appearing in press result lists.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Type" type="OrganisationType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="ParentOrganisation" type="Organisation" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The parent of this organisation, e.g. a regional organisation for a club.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ChildOrganisation" type="Organisation" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            The children of this organisation, e.g. a number of clubs for a regional organisation.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Country" type="Country" minOccurs="0"/>
      <xsd:element name="Address" type="Address" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Contact" type="Contact" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Account" type="Account" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Role" type="Role" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Persons having certain roles within the organisation, e.g. chairman, secretary, and treasurer.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:simpleType name="OrganisationType">
    <xsd:annotation>
      <xsd:documentation>
        The hierarchical level or type of an organisation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="IOF"/>
      <xsd:enumeration value="IOFRegion"/>
      <xsd:enumeration value="NationalFederation"/>
      <xsd:enumeration value="NationalRegion"/>
      <xsd:enumeration value="Club"/>
      <xsd:enumeration value="School"/>
      <xsd:enumeration value="Company"/>
      <xsd:enumeration value="Military"/>
      <xsd:enumeration value="Other"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="Role">
    <xsd:sequence>
      <xsd:element name="Person" type="Person"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="Event" mixed="false">
    <xsd:sequence>
      <xsd:element name="Id" type="Id" minOccurs="0"/>
      <xsd:element name="Name" type="xsd:string" minOccurs="0"/>
      <xsd:element name="StartTime" type="DateAndOptionalTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The start time for the first starting competitor of the event. If the event contains multiple races, this is the start time for the first starting competitor of the first race.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="EndTime" type="DateAndOptionalTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The expected finish time for the last finishing competitor of the event. If the event contains multiple races, this is the expected finish time for the last finishing competitor of the last race.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Form" type="EventForm" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Organiser" type="Organisation" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            The organisations that organise the event.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Official" type="Role" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            The main officials of the event, e.g. course setter and event president.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="EventClass" type="EventClass" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            The classes that are available at the event.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="EventRace" type="EventRace" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            An event consists of a number of races. The number is equal to the number of times a competitor should start. Most events contain a single race.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="EntryReceiver" type="EntryReceiver" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            Address and contact information to the person or organisation which registers the entries for the event.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Service" type="Service" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            The services available for the event, e.g. accomodation and transport.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <!-- TODO: is account information really necessary? -->
      <xsd:element name="Account" type="Account" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="URL" type="EventURL" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            URLs to various types of additional information regarding the event, e.g. event website or result list.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Information" type="InformationItem" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Presents arbitrary data about the event, e.g. "Accommodation", "Local Attractions", and so on. Information present here should be defined well in advance of the event, in contrast to the 'News' element.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Schedule" type="Schedule" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Defines the schedule of events that comprise the entire orienteering event, e.g. entry deadlines, banquet and social events, and awards ceremonies.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="News" type="InformationItem" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Presents "last minute information" about the event.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="EntryReceiver">
    <xsd:sequence>
      <xsd:element name="Address" type="Address" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Contact" type="Contact" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:simpleType name="EventForm">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Individual"/>
      <xsd:enumeration value="Team"/>
      <xsd:enumeration value="Relay"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="EventRace">
    <xsd:annotation>
      <xsd:documentation>
        An event consists of a number of event races. The number is equal to the number of times a competitor should start.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Id" type="Id" minOccurs="0"/>
      <xsd:element name="Name" type="xsd:string" minOccurs="0"/>
      <xsd:element name="StartTime" type="DateAndOptionalTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The start time for the first starting competitor of the race.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="EndTime" type="DateAndOptionalTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The expected finish time for the last finishing competitor of the race.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Classification" type="RaceClassification" minOccurs="0"/>
      <xsd:element name="Position" type="GeoPosition" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The geographical location of the arena.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Discipline" type="RaceDiscipline" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Attribute" type="RaceAttribute" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Any extra information for the race, e.g. whether the race is a championship race.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Organiser" type="Organisation" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            The organisations that organise the event.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Official" type="Role" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            The main officials of the event, e.g. course setter and event president.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Service" type="Service" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            The services available for the race, e.g. accomodation and transport.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="URL" type="EventURL" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            URLs to various types of additional information regarding the event, e.g. event website or result list.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:simpleType name="RaceClassification">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="International"/>
      <xsd:enumeration value="National"/>
      <xsd:enumeration value="Regional"/>
      <xsd:enumeration value="Local"/>
      <xsd:enumeration value="Club"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="RaceDiscipline">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Sprint"/>
      <xsd:enumeration value="Middle"/>
      <xsd:enumeration value="Long"/>
      <xsd:enumeration value="Ultralong"/>
      <xsd:enumeration value="Other"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="EventURL">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="type" use="required">
          <xsd:simpleType>
            <xsd:restriction base="xsd:NMTOKEN">
              <xsd:enumeration value="Website"/>
              <xsd:enumeration value="StartList"/>
              <xsd:enumeration value="ResultList"/>
              <xsd:enumeration value="Other"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="Schedule">
    <xsd:sequence>
      <xsd:element name="StartTime" type="xsd:dateTime"/>
      <xsd:element name="EndTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Title" type="xsd:string"/>
      <xsd:element name="Venue" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Position" type="GeoPosition" minOccurs="0"/>
      <xsd:element name="Details" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="InformationItem">
    <xsd:sequence>
      <xsd:element name="Title" type="xsd:string"/>
      <xsd:element name="Content" type="xsd:string"/>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="ClassAttribute" mixed="false">
    <!-- todo: enum? -->
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="Class">
    <xsd:annotation>
      <xsd:documentation>
        A general class, not connected to any particular event.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Id" type="Id" minOccurs="0"/>
      <xsd:element name="Name" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ShortName" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Leg" type="Leg" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Information about the legs, if the class is a relay class.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Attribute" type="ClassAttribute" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Any extra information for the class.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="minAge" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The lowest allowed age for a competitor taking part in the class.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="maxAge" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The highest allowed age for a competitor taking part in the class.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="sex" use="optional" default="B">
      <xsd:simpleType>
        <xsd:restriction base="xsd:NMTOKEN">
          <xsd:enumeration value="B"/>
          <xsd:enumeration value="F"/>
          <xsd:enumeration value="M"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="teamMinAge" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The lowest allowed age sum of the team members for a team taking part in the class.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="teamMaxAge" type="xsd:integer" use="optional">
      <xsd:annotation>
        <xsd:documentation>
          The highest allowed age sum of the team members for a team taking part in the class.
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="EventClass">
    <xsd:annotation>
      <xsd:documentation>
        A class extended with event-specific information.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Class" type="Class">
        <xsd:annotation>
          <xsd:documentation>
            Class information that is event-agnostic.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="PunchingSystem" type="PunchingSystem" minOccurs="0"/>
      <xsd:element name="Status" type="EventClassStatus" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The status of the class, e.g. if results should be considered invalid due to misplaced constrols.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="EventRaceClass" type="EventRaceClass" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            Race-specific information for the class, e.g. course(s) assigned to the class.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="numberOfCompetitors" type="xsd:integer" use="optional"/>
    <!-- competitor: a person or a team -->
    <xsd:attribute name="maxNumberOfCompetitors" type="xsd:integer" use="optional"/>
    <!-- competitor: a person or a team -->
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:simpleType name="EventClassStatus">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Normal"/>
      <xsd:enumeration value="Invalidated"/>
      <xsd:enumeration value="InvalidatedNoFee"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="EventRaceClass">
    <xsd:annotation>
      <xsd:documentation>
        Information about a class with respect to an event race.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="EventRace" type="EventRace"/>
      <xsd:element name="Fee" type="Fee" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="FirstStart" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="Status" type="EventRaceClassStatus"/>
      <xsd:element name="Course" type="Course" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>
            The courses assigned to this class. For a mass-start event or a relay event, there are usually multiple courses per class due to the usage of spreading methods.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:simpleType name="EventRaceClassStatus">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Normal"/>
      <xsd:enumeration value="Invalidated"/>
      <xsd:enumeration value="InvalidatedNoFee"/>
      <xsd:enumeration value="Excluded"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="Fee">
    <xsd:annotation>
      <xsd:documentation>
        A fee that applies when entering a class at an event or ordering a service.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Id" type="Id" minOccurs="0"/>
      <xsd:element name="Name" type="LanguageString" minOccurs="0"/>
      <xsd:element name="Amount" type="Amount" minOccurs="0"/>
      <xsd:element name="ValidFromTime" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The first entry time that the entry fee is valid for.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ValidToTime" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The last entry time that the entry fee is valid for.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="FromDateOfBirth" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The end of the birth date interval that the entry fee should be applied to. Omit if no lower birth date restriction.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ToDateOfBirth" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The end of the birth date interval that the entry fee should be applied to. Omit if no upper birth date restriction.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="Amount">
    <xsd:simpleContent>
      <xsd:extension base="xsd:decimal">
        <xsd:attribute name="currency" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <!--
    ##########
    ### Entries
    ##########
   
    Elements supporting entries for an event, especially
    the persons entering
   
    Lists to exchange:
      - EntryList
  -->

  <!-- EntryList
    A number of Organisation Entries each holding an organisation, an organisation contact and
    the persons entering the competition, probably aggregated
    into teams if it is for a relay.
  -->
  <xsd:element name="EntryList">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="TeamEntry" type="TeamEntry" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element name="PersonEntry" type="PersonEntry" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
    </xsd:complexType>
  </xsd:element>


  <!-- Entry
    An entry consists of
    1) a person, his/hers personal control card, and a rank
       (e.g. from a ranking list, this could be needed by the event
       software to allocate starting times).
    2) a team, which holds a number of persons possibly ordered in
       a sequence within the team.
  -->
  <xsd:complexType name="PersonEntry">
    <xsd:sequence>
      <xsd:element name="Id" type="Id" minOccurs="0"/>
      <xsd:element name="Person" type="Person"/>
      <xsd:element name="Organisation" type="Organisation" minOccurs="0"/>
      <xsd:element name="ControlCard" type="ControlCard" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Score" type="Score" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="EventClass" type="EventClass" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="EventRace" type="EventRace" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Fee" type="Fee" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="AllocationControl" type="AllocationControl" minOccurs="0"/>
      <xsd:element name="EntryTime" type="xsd:dateTime"/>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="TeamEntry">
    <xsd:sequence>
      <xsd:element name="Id" type="Id" minOccurs="0"/>
      <xsd:element name="Name" type="xsd:string"/>
      <xsd:element name="TeamPersonEntry" type="TeamPersonEntry" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="EventClass" type="EventClass" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="EventRace" type="EventRace" minOccurs="0" maxOccurs="unbounded"/>
      <!-- Fees for the team as a whole, not related to the individual persons -->
      <xsd:element name="Fee" type="Fee" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="AllocationControl" type="AllocationControl" minOccurs="0"/>
      <xsd:element name="EntryTime" type="xsd:dateTime"/>
    </xsd:sequence>
    <xsd:attribute name="nonCompetitor" type="xsd:boolean" default="false" />
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="TeamPersonEntry">
    <xsd:sequence>
      <xsd:element name="Person" type="Person"/>
      <xsd:element name="Organisation" type="Organisation" minOccurs="0"/>
      <xsd:element name="ControlCard" type="ControlCard" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Score" type="Score" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Leg" type="xsd:integer" minOccurs="0"/>
      <!-- Support for defining the competitor starting order within a team at a parallel relay leg (e.g. 25-manna) -->
      <xsd:element name="LegOrder" type="xsd:integer" minOccurs="0"/>
      <xsd:element name="Fee" type="Fee" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="AllocationControl" type="AllocationControl" minOccurs="0"/>
      <xsd:element name="EntryTime" type="xsd:dateTime"/>
    </xsd:sequence>
  </xsd:complexType>

  <!-- AllocationControl
    Used to state start time allocation requests.
    It consists of a possible reference Organisation or Person and the
    allocation request, e.g. late start or grouped with the reference
    Organisation/Person.
    This way it is possible to state requests to the event organizer
    so that e.g. all members of an organisation has start times close to each
    other - or parents have start times far from each other.
    It is totally up to the event software and organizers whether
    they will support such requests.
  -->
  <xsd:complexType name="AllocationControl">
    <xsd:sequence>
      <xsd:element name="Organisation" type="Organisation" minOccurs="0"/>
      <xsd:element name="Person" type="Person" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="type" default="Normal">
      <xsd:simpleType>
        <xsd:restriction base="xsd:NMTOKEN">
          <xsd:enumeration value="LateStart"/>
          <xsd:enumeration value="Normal"/>
          <xsd:enumeration value="EarlyStart"/>
          <xsd:enumeration value="DistributedFromRef"/>
          <xsd:enumeration value="Other"/>
          <xsd:enumeration value="GroupedWithRef"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <!--
    ##########
    ### Start List
    ##########
   
    Elements maintaining information of the start and start list
   
    Lists to exchange:
      - StartList
  -->

  <!-- StartList
    A list containing the event (or identification) and a number
    of class start lists
  -->
  <xsd:element name="StartList">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Event" type="Event" minOccurs="0"/>
        <xsd:element name="ClassStart" type="ClassStart" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
      <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
    </xsd:complexType>
  </xsd:element>

  <!-- ClassStart
    The start list of a single class containing either individual
    start times for competitors or team start times for relays
  -->
  <xsd:complexType name="ClassStart">
    <xsd:sequence>
      <xsd:element name="EventClass" type="EventClass"/>
      <xsd:element name="TeamStart" type="TeamStart" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="PersonStart" type="PersonStart" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="timeResolution" type="xsd:double" use="optional" default="1"/>
  </xsd:complexType>

  <!-- PersonStart
    The start time(s) of a single competitor. In case of a multi day
    event all start times are listed.
  -->
  <xsd:complexType name="PersonStart">
    <xsd:sequence>
      <xsd:element name="Person" type="Person" />
      <xsd:element name="Organisation" type="Organisation" minOccurs="0"/>
      <xsd:element name="Leg" type="xsd:integer" minOccurs="0"/>
      <!-- Support for defining the competitor starting order within a team at a parallel relay leg (e.g. 25-manna) -->
      <xsd:element name="LegOrder" type="xsd:integer" minOccurs="0"/>
      <xsd:element name="Start" type="Start" minOccurs="0"/>
      <xsd:element name="Course" type="Course" minOccurs="0"/>
      <xsd:element name="ControlCard" minOccurs="0"/>
      <xsd:element name="StartName" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TeamStart">
    <xsd:sequence>
      <xsd:element name="Name" type="xsd:string"/>
      <xsd:element name="Organisation" type="Organisation" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Start" type="Start" minOccurs="0"/>
      <xsd:element name="PersonStart" type="PersonStart" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <!-- Start
    The start information of a competitor of a single race.
    It contains the start number, bib number, control card of the
    competitor, the start time, the team order (if relay) and the
    course length.
  -->
  <xsd:complexType name="Start">
    <xsd:sequence>
      <xsd:element name="BibNumber" type="xsd:string" minOccurs="0"/>
      <xsd:element name="StartTime" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <!--
    ##########
    ### ResultList
    ##########

    Results from an event. This can be a complete list (i.e. after
    the event), a snapshot (current standings - while the event is
    under way), or a delta list (changes since last list, meant for
    frequent exchange of results).

    Lists to exchange:
      - ResultList
  -->

  <!-- ResultList
    A result list containing an event (or identifier) and a number
    of class results. The list can be more or less complete as
    explained above.
  -->
  <xsd:element name="ResultList">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Event" type="Event" minOccurs="0"/>
        <xsd:element name="ClassResult" type="ClassResult" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
      <xsd:attribute name="status" default="Complete">
        <xsd:simpleType>
          <xsd:restriction base="xsd:NMTOKEN">
            <xsd:enumeration value="Complete"/>
            <xsd:enumeration value="Delta"/>
            <xsd:enumeration value="Snapshot"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
    </xsd:complexType>
  </xsd:element>

  <!-- ClassResult
    Results from a single class. It consists of a Class and a number
    of person or team results.
  -->
  <xsd:complexType name="ClassResult">
    <xsd:sequence>
      <xsd:element name="EventClass" type="EventClass" minOccurs="0" />
      <xsd:element name="Course" type="Course" minOccurs="0"/>
      <xsd:element name="PersonResult" type="PersonResult" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="TeamResult" type="TeamResult" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="timeResolution" type="xsd:double" use="optional" default="1"/>
  </xsd:complexType>

  <xsd:complexType name="PersonResult">
    <xsd:sequence>
      <xsd:element name="Person" type="Person"/>
      <xsd:element name="Organisation" type="Organisation" minOccurs="0"/>
      <xsd:element name="Leg" type="xsd:integer" minOccurs="0"/>
      <!-- Support for defining the competitor starting order within a team at a parallel relay leg (e.g. 25-manna) -->
      <xsd:element name="LegOrder" type="xsd:integer" minOccurs="0"/>
      <xsd:element name="Result" type="Result"/>
      <xsd:element name="Course" type="Course" minOccurs="0"/>
      <xsd:element name="ControlCard" minOccurs="0"/>
      <xsd:element name="SplitTime" minOccurs="0" maxOccurs="unbounded"/>
      <!-- Support for Trail-O results. -->
      <xsd:element name="ControlAnswer" type="ControlAnswer" minOccurs="0" maxOccurs="unbounded"/>
      <!-- Support for GPS routes/tracking. -->
      <xsd:element name="Route" type="Route" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TeamResult">
    <xsd:sequence>
      <xsd:element name="Name" type="xsd:string"/>
      <xsd:element name="Organisation" type="Organisation" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Result" type="Result"/>
      <xsd:element name="PersonResult" type="PersonResult" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <!-- Result
    Overall result of a single competitor. For a multiday event
    this is the accumulated result
  -->
  <xsd:complexType name="Result">
    <xsd:sequence>
      <xsd:element name="BibNumber" type="xsd:string" minOccurs="0"/>
      <xsd:element name="StartTime" type="xsd:dateTime" minOccurs="0"/>
      <xsd:element name="FinishTime" type="xsd:dateTime" minOccurs="0"/>
      <!-- Time in seconds -->
      <xsd:element name="Time" type="xsd:double" minOccurs="0"/>
      <xsd:element name="Position" type="xsd:integer" minOccurs="0"/>
      <xsd:element name="Status" type="ResultStatus"/>
      <xsd:element name="Score" type="Score" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <!-- Status
    The status of the competitor or team at the time of the result
    generation:
      - Inactive           : Has not yet started
      - DidNotEnter        : Did not enter (in this race)
      - DidNotStart        : Did not start (in this race)
      - Active             : Currently on course
      - Finished           : Finished but not validated
      - OK                 : Finished and validated
      - MissingPunch       : Missing Punch
      - DidNotFinish       : Did Not Finish
      - Disqualified       : Disqualified
      - NotCompeting       : Not Competing (running outside the competition)
      - SportingWithdrawal : Sporting Withdrawal (e.g. helping injured)
      - OverTime           : Overtime, i.e. did not finish within max time
      - Moved              : Moved to another class
      - MovedUp            : Moved to a "better" class, in case of entry
                             restrictions
      - Cancelled          : The competitor has cancelled his/hers entry
  -->
  <xsd:simpleType name="ResultStatus">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Inactive"/>
      <xsd:enumeration value="MissingPunch"/>
      <xsd:enumeration value="DidNotEnter"/>
      <xsd:enumeration value="DidNotStart"/>
      <xsd:enumeration value="MovedUp"/>
      <xsd:enumeration value="OverTime"/>
      <xsd:enumeration value="Moved"/>
      <xsd:enumeration value="Active"/>
      <xsd:enumeration value="Disqualified"/>
      <xsd:enumeration value="DidNotFinish"/>
      <xsd:enumeration value="Cancelled"/>
      <xsd:enumeration value="SportingWithdrawal"/>
      <xsd:enumeration value="OK"/>
      <xsd:enumeration value="NotCompeting"/>
      <xsd:enumeration value="Finished"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- SplitTime
    Time elapsed from start to punching the control. Each control of the 
    competitor's course has to be defined in a SplitTime element, even if 
    the control has not been punched.
    The 'status' attribute holds the status of the split time as follows:
      OK:         Control belongs to the course and has been punched 
                  (either by electronical punching or pin punching).
                  If the time is not available or invalid, omit the 'Time'
                  element.
      Missing:    Control belongs to the course but has not been punched.
      Additional: Control does not belong to the course, but the competitor
                  has punched it.  
  -->
  <xsd:complexType name="SplitTime">
    <xsd:sequence>
      <xsd:element name="ControlCode" type="xsd:string"/>
      <!-- Time in seconds -->
      <xsd:element name="Time" type="xsd:double" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="status" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:NMTOKEN">
          <xsd:enumeration value="OK"/>
          <xsd:enumeration value="Missing"/>
          <xsd:enumeration value="Additional"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <!-- Result Selection
    Used to specify subresults of interest for the press (see the
    Press element in the "Office" section). The selection consists
    of a list of organisations, classes and a max position
    in the list, e.g. the top 3.
  -->
  <xsd:complexType name="ResultSelection">
    <xsd:sequence>
      <xsd:element name="Organisation" type="Organisation" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Class" type="Class" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="MaxPosition" type="xsd:integer"/>
      <xsd:element name="MaxPositionForOrganisations" type="xsd:integer" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="RaceAttribute" mixed="false">
    <!-- todo: enum? -->
    <xsd:simpleContent>
      <xsd:extension base="xsd:string" />
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="Leg">
    <xsd:sequence>
      <xsd:element name="Name" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="minNumberOfCompetitors" type="xsd:integer" use="optional" default="1"/>
    <xsd:attribute name="maxNumberOfCompetitors" type="xsd:integer" use="optional" default="1"/>
  </xsd:complexType>

  <!-- Control
    A Control consists of a control code, a description, a position
    in the terrain, a position on the map and a punching unit.
    This element is not the one used in the courses. For that, see
    CourseControl below.
  -->
  <xsd:complexType name="Control">
    <xsd:sequence>
      <!-- Code indicates the code of the control -->
      <xsd:element name="Code" type="xsd:string"/>
      <xsd:element name="Position" type="GeoPosition" minOccurs="0"/>
      <xsd:element name="PunchingUnit" type="PunchingUnit" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="MapPosition" type="MapPosition" minOccurs="0"/>
      <xsd:element name="Comment" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <!-- 
    Geographical position, e.g. of a control
  -->
  <xsd:complexType name="GeoPosition">
    <xsd:attribute name="lng" use="required" type="xsd:double"/>
    <xsd:attribute name="lat" use="required" type="xsd:double"/>
    <!-- Elevation of control in meters -->
    <xsd:attribute name="alt" use="optional" type="xsd:double"/>
  </xsd:complexType>

  <!-- Map
    Information of the map used, scale and upper left corner of the
    bitmap used in course setting software wrt. the "real" map (yes,
    this _is_ in fact used!)
  -->
  <xsd:complexType name="Map">
    <xsd:sequence>
      <!-- 1:15000 should be represented as 15000 -->
      <xsd:element name="Scale"  type="xsd:double"/>
      <xsd:element name="MapPositionTopLeft" type="MapPosition"/>
      <xsd:element name="MapPositionBottomRight" type="MapPosition"/>
    </xsd:sequence>
  </xsd:complexType>

  <!-- MapPosition
    Position of the Control on the Map
  -->
  <xsd:complexType name="MapPosition">
    <xsd:attribute name="x" use="required" type="xsd:double"/>
    <xsd:attribute name="y" use="required" type="xsd:double"/>
    <xsd:attribute name="unit" default="mm">
      <xsd:simpleType>
        <xsd:restriction base="xsd:NMTOKEN">
          <xsd:enumeration value="px"/>
          <xsd:enumeration value="mm"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  
  <xsd:complexType name="CourseClassData">
    <xsd:sequence>
      <xsd:element name="Course" type="Course"/>
      <xsd:element name="Class" type="Class" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <!-- Course
    Consists of a name, length, climb, and a number of
    controls including start and finish.
  -->
  <xsd:complexType name="Course">
    <xsd:sequence>
      <xsd:element name="Name" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Length" type="xsd:double" minOccurs="0"/>
      <xsd:element name="Climb" type="xsd:double" minOccurs="0"/>
      <!-- BEGIN 2.1 addition -->
      <!-- added minOccurs="0" - might sometimes want to express course variation id and course length but not the controls -->
      <xsd:element name="Control" type="CourseControl" minOccurs="0" maxOccurs="unbounded"/>
      <!-- END 2.1 addition -->
    </xsd:sequence>
    <!-- defines the "base course" of the course, used for gafflings -->
    <xsd:attribute name="courseGroup" type="xsd:string" use="optional"/>
    <xsd:attribute name="numberOfCompetitors" type="xsd:integer" use="optional"/>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <!-- CourseControl
    A control included in a particular course. It consists of a sequence number,
    a "real" control, a leglength and a position on the map for the
    control text, i.e. its sequence number.
  -->
  <xsd:complexType name="CourseControl">
    <xsd:sequence>
      <xsd:element name="Control" type="Control"/>
      <!-- MapText indicates the text shown next to the circle, i.e. the control number -->
      <xsd:element name="MapText" type="xsd:string" minOccurs="0"/>
      <!-- MapTextPosition indicates the position of the center of the text relative to the center of the circle/triangle -->
      <xsd:element name="MapTextPosition" type="MapPosition" minOccurs="0"/>
      <!-- LegLength is the length in meters from the previous control on the course -->
      <xsd:element name="LegLength" type="xsd:double" minOccurs="0"/>
      <xsd:element name="Comment" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="type" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:NMTOKEN">
          <xsd:enumeration value="Control"/>
          <xsd:enumeration value="Start"/>
          <xsd:enumeration value="Finish"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <!-- see http://orienteering.org/wp-content/uploads/2010/12/Control-Descriptions-2004-symbols-only.pdf, page 15 -->
    <xsd:attribute name="specialInstruction" default="None">
      <xsd:simpleType>
        <xsd:restriction base="xsd:NMTOKEN">
          <xsd:enumeration value="None"/>
          <xsd:enumeration value="TapedRoute"/>
          <xsd:enumeration value="FunnelTapedRoute"/>
          <xsd:enumeration value="MandatoryCrossingPoint"/>
          <xsd:enumeration value="MandatoryOutOfBoundsAreaPassage"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <!-- length of taped route (meters) if different from value specified in LegLength element, i e when Special Instruction 13.1 is used -->
    <xsd:attribute name="tapedRouteLength" type="xsd:double" use="optional" />
  </xsd:complexType>

  <!-- TeamCourseCombination
    A TeamCourseCombination defines the courses assigned to the members of a team
    to support relays using "gaffling".
  -->
  <xsd:complexType name="TeamCourseCombination">
    <xsd:sequence>
      <xsd:element name="TeamId" type="xsd:string"/>
      <xsd:element name="CourseAssignment" minOccurs="1" maxOccurs="unbounded">
        <xsd:complexType mixed="false">
          <xsd:sequence>
            <xsd:element name="BibNumber" type="xsd:string" minOccurs="0"/>
            <xsd:element name="Leg" type="xsd:integer"/>
            <xsd:element name="LegOrder" type="xsd:integer" minOccurs="0"/>
            <xsd:element name="Course" type="Course"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <!-- Punching -->
  <xsd:complexType name="PunchingUnit">
    <xsd:sequence>
      <xsd:element name="Id" type="Id"/>
      <xsd:element name="PunchingSystem" type="PunchingSystem"/>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>
  <!-- TODO: skip enumeration and make xsd:string instead, to open up for other types of punching systems? -->
  <xsd:simpleType name="PunchingSystem">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Manual"/>
      <xsd:enumeration value="Emit"/>
      <xsd:enumeration value="SI"/>
      <xsd:enumeration value="Other"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!--
    ##########
    ### "Office" elements
    ##########
   
    The following elements are used for non-orienteering purposes,
    i.e. accomodation, payment, addresses, press, dates etc.
   
    Also different "general purpose" elements, e.g. date and time.
   
    Lists to exchange:
      - OrganisationList
      - TransactionList
  -->

  <!-- Press
    A special organisation that can contain a request for a
    special selection of results after the event. E.g. a foreign
    paper can have a speciel interest in the results of the
    competitors of that nationality.
  -->
  <xsd:complexType name="Press">
    <xsd:sequence>
      <xsd:element name="Name" type="xsd:string"/>
      <xsd:element name="ContactPerson" type="Person" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Address" type="Address" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Contact" type="Contact" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="ResultSelection" type="ResultSelection" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="mediaType" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:NMTOKEN">
          <xsd:enumeration value="Magazine"/>
          <xsd:enumeration value="TV"/>
          <xsd:enumeration value="Paper"/>
          <xsd:enumeration value="Other"/>
          <xsd:enumeration value="Web"/>
          <xsd:enumeration value="Radio"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <!-- PressList
    A list of Press elements
  -->
  <xsd:element name="PressList">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Press" type="Press" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
    </xsd:complexType>
  </xsd:element>

  <!-- Service
    A general purpose service request, e.g. for accomodation.
  -->
  <xsd:complexType name="Service">
    <xsd:sequence>
      <xsd:element name="Id" type="Id" minOccurs="0"/>
      <xsd:element name="Name" type="LanguageString" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Fee" type="Fee" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Comment" type="LanguageString" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="MaxNumber" type="xsd:double" minOccurs="0"/>
    </xsd:sequence>
    <!-- used to mark special services, like rental cards -->
    <xsd:attribute name="type" type="xsd:string" use="optional"/>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <!-- Service Request List
    List of requests from organisations.
  -->
  <xsd:element name="ServiceRequestList">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Event" type="Event" minOccurs="0"/>
        <xsd:element name="OrganisationServiceRequest" type="OrganisationServiceRequest" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element name="PersonServiceRequest" type="PersonServiceRequest" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="OrganisationServiceRequest">
    <xsd:sequence>
      <xsd:element name="Organisation" type="Organisation"/>
      <xsd:element name="ServiceRequest" type="ServiceRequest" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="PersonServiceRequest" type="PersonServiceRequest" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PersonServiceRequest">
    <xsd:sequence>
      <xsd:element name="Person" type="Person"/>
      <xsd:element name="ServiceRequest" type="ServiceRequest" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ServiceRequest">
    <xsd:sequence>
      <xsd:element name="Id" type="Id" minOccurs="0"/>
      <xsd:element name="Service" type="Service"/>
      <xsd:element name="Quantity" type="xsd:double"/>
      <xsd:element name="Fee" type="Fee" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="Comment" type="xsd:string" minOccurs="0"/>
      <!-- todo: support for metadata -->
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <!-- Account -->
  <xsd:complexType name="Account" mixed="false">
    <xsd:attribute name="type" type="xsd:string"/>
  </xsd:complexType>

  <!-- Transaction
    A financial transaction between two accounts, possibly linked
    to a number of entries and/or service requests.
  -->
  <xsd:complexType name="Transaction">
    <xsd:sequence>
      <xsd:element name="Account" type="Account" minOccurs="0"/>
      <xsd:element name="Time" type="xsd:dateTime" minOccurs="0" />
      <xsd:element name="Amount" type="Amount"/>
      <xsd:element name="Organisation" type="Organisation" minOccurs="0"/>
      <xsd:element name="Person" type="Person" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="TeamEntry" type="TeamEntry" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="PersonEntry" type="PersonEntry" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="OrganisationServiceRequest" type="OrganisationServiceRequest" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="PersonServiceRequest" type="PersonServiceRequest" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <!-- TransactionList
    A list of transactions.
  -->
  <xsd:element name="TransactionList">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Event" type="Event" minOccurs="0"/>
        <xsd:element name="Transaction" type="Transaction" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:complexType name="Address">
    <xsd:annotation>
      <xsd:documentation>
        The postal address of a person or organisation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CareOf" type="xsd:string" minOccurs="0"/>
      <xsd:element name="Street" type="xsd:string"/>
      <xsd:element name="ZipCode" type="xsd:string" minOccurs="0"/>
      <xsd:element name="City" type="xsd:string"/>
      <xsd:element name="Country" type="Country"/>
    </xsd:sequence>
    <!-- TODO: is 'type' really needed? consider removal, or change to xsd:string -->
    <xsd:attribute name="type" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:NMTOKEN">
          <xsd:enumeration value="Other"/>
          <xsd:enumeration value="Official"/>
          <xsd:enumeration value="Work"/>
          <xsd:enumeration value="Home"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="Country" mixed="false">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="alpha2" type="xsd:string" use="optional">
          <xsd:annotation>
            <xsd:documentation>
              The ISO 3166-1-alpha-2 code of the country as stated in http://www.iso.org/iso/country_codes/iso_3166_code_lists/english_country_names_and_code_elements.htm.
            </xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="Contact">
    <xsd:annotation>
      <xsd:documentation>
        Contact information for a person, organisation or other entity.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="type" use="required">
          <xsd:simpleType>
            <!-- TODO: which tokens should be included? -->
            <xsd:restriction base="xsd:NMTOKEN">
              <xsd:enumeration value="HomePhoneNumber"/>
              <xsd:enumeration value="MobilePhoneNumber"/>
              <xsd:enumeration value="WorkPhoneNumber"/>
              <xsd:enumeration value="FaxNumber"/>
              <xsd:enumeration value="EmailAddress"/>
              <xsd:enumeration value="WebAddress"/>
              <xsd:enumeration value="Other"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="modifyTime" type="xsd:dateTime" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>


  <!-- Element describing the correct answer, the selected answer and the time used on a Trail-O control. -->
  <xsd:complexType name="ControlAnswer">
    <xsd:sequence>
      <xsd:element name="Answer" type="xsd:string"/>
      <xsd:element name="CorrectAnswer" type="xsd:string"/>
      <!-- Time in seconds -->
      <xsd:element name="Time" type="xsd:double" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>

  <!--
  *** GPS ROUTES / TRACKING ***

  Comment: Describing a route in xml is rather "chatty", leading to very large amount of data when there are many competitors.
  There is probably need for some compression (e.g. binary data expressed as a base64-encoded string).  -->

  <!-- A competitor's route, recorded by a tracking device. A route contains a number of route points,
  where every point has longitude, latitude, altitude (optionally) and time. -->
  <xsd:complexType name="Route">
    <xsd:sequence>
      <xsd:element name="RoutePoint" type="RoutePoint" minOccurs="0" maxOccurs="unbounded"/>
      <!-- GZip compressed list of RoutePoints -->
      <xsd:element name="CompressedRoutePoints" minOccurs="0" type="xsd:base64Binary"/>
    </xsd:sequence>
  </xsd:complexType>

  <!-- Point on a competitor's route. -->
  <xsd:complexType name="RoutePoint">
    <xsd:attribute name="lng" use="required" type="xsd:double"/>
    <xsd:attribute name="lat" use="required" type="xsd:double"/>
    <xsd:attribute name="alt" use="optional" type="xsd:double"/>
    <xsd:attribute name="time" use="required" type="xsd:dateTime"/>
    <xsd:attribute name="type" default="Intermediate">
      <xsd:simpleType>
        <xsd:restriction base="xsd:NMTOKEN">
          <xsd:enumeration value="Intermediate"/>
          <xsd:enumeration value="Start"/>
          <xsd:enumeration value="Stop"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>


  <!-- Control card list for handling rental cards, proposed by Stefan Nordmark. -->
  <xsd:element name="ControlCardList">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="ControlCardOwner" type="xsd:string" minOccurs="0"/>
        <xsd:element name="ControlCard" type="ControlCard" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="iofVersion" type="xsd:string" fixed="3.0"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:complexType name="DateAndOptionalTime">
    <xsd:sequence>
      <xsd:element name="Date" type="xsd:date" />
      <xsd:element name="Time" type="xsd:time" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="LanguageString">
    <xsd:attribute name="language" type="xsd:string" use="optional"/>
  </xsd:complexType>


</xsd:schema>
